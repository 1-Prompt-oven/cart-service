spring:
  # 공통 설정
  application:
    name: cart-service
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
  batch:
    job:
      enabled: true
    jdbc:
      initialize-schema: always

  logging:
    level:
      org.example.product_admin_service: DEBUG

  server:
    shutdown: graceful

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: cart-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      concurrency: 3

  datasource:
    url: jdbc:mysql://15.164.251.81:3306/cart
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    show-sql: true

  springdoc:
    api-docs:
      path: /v3/api-docs
    swagger-ui:
      path: /swagger-ui.html
    packages-to-scan: org.example.productservice  # 스캔할 패키지 명시
    default-produces-media-type: application/json
    default-consumes-media-type: application/json
    swagger-ui.operations-sorter: alpha

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

server:
  port: 0  # random port for local development
